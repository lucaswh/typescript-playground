{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","bootstrap","document","getElementById","href","window","location","split","replace","win","require","config","paths","vs","MonacoEnvironment","getWorkerUrl","workerId","label","init","editor","_tsVersion","innerText","backup","hash","localStorage","getItem","decode","getLocalStorage","useBackup","defaultOptions","compilerOptions","noImplicitAny","strictNullChecks","strictFunctionTypes","strictPropertyInitialization","noImplicitReturns","noImplicitThis","removeComments","experimentalDecorators","emitDecoratorMetadata","allowNonTsExtensions","target","monaco","languages","typescript","ScriptTarget","ES5","windowOptions","console","uiOptions","autoUpdateUrl","localStorageBackup","tsp","options","compile","onCodeChange","emit","run","runCode","share","getShareableUrl","reset","resetLocalStorage","sync","syncOptions","setCompilerOption","tsDefaultValue","join","htmlDefaultValue","lessDefaultValue","setOptions","opt","excludeOptionsFromSharing","updateCompilerOptions","tsEditor","_editorTs","language","theme","automaticLayout","minimap","enabled","selectionClipboard","jsEditor","_editorJs","readOnly","quickSuggestions","parameterHints","autoClosingBrackets","suggestOnTriggerCharacters","snippetSuggestions","wordBasedSuggestions","_editorHtml","_editorLess","onDidChangeModelContent","debounce","_optionsToggle","onclick","toggleOptions","_runCode","initOptions","onkeydown","keyBindings","updateHash","updateLocalStorage","interval","reduce","style","opacity","fadeEffect","setInterval","parseFloat","clearInterval","display","fadeOut","_loading","ev","ctrlKey","which","metaKey","preventDefault","inputs","_optionsList","length","input","option","classList","item","HTMLInputElement","type","checked","HTMLSelectElement","onchange","onOptionChange","this","updateShareableUrl","event","_processing","getTypeScriptWorker","then","worker","getModel","uri","service","getEmitOutput","toString","hideProcessingIndicator","result","emitSkipped","outputFiles","text","setValue","updateJsEditor","updated","runWindow","closed","_runText","open","onunload","fs","readFileSync","setTimeout","write","html","runWindowCodeIFrame","getValue","log","getWindowCode","close","windowUnloaded","initial","encode","exclude","getHashValue","setItem","reload","confirm","removeItem","_shareableUrl","btoa","encodeURIComponent","JSON","stringify","parse","decodeURIComponent","atob","_i","excludeOptionsFromSharing_1","getOptions","typescriptDefaults","setCompilerOptions","opts","base","k","toggle","_options","RegExp","prepareWindowCode","runWindowHtmlIFrame","Array","slice","getElementsByClassName","map","v","firstElementChild"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as ts from 'typescript';\r\nimport fs = require('fs');\r\nimport debounce = require('lodash.debounce');\r\nimport runWindowHtmlIFrame = require('./run-iframe.html');\r\n\r\n// // import runWindowHtmlConsole = require('./run-console.html');\r\n// // import runWindowHtmlPlain = require('./run-plain.html');\r\n\r\ndeclare global {\r\n    interface Window {\r\n      tsp: {\r\n        options?: Options;\r\n        compile?: typeof onCodeChange;\r\n        emit?: typeof onCodeChange;\r\n        run?: typeof runCode;\r\n        share?: typeof getShareableUrl;\r\n        reset?: typeof resetLocalStorage;\r\n        sync?: typeof syncOptions;\r\n        setCompilerOption?: typeof setCompilerOption;\r\n      }\r\n    }\r\n}\r\n\r\ninterface Options {\r\n  compilerOptions?: monaco.languages.typescript.CompilerOptions;\r\n  windowOptions?: WindowOptions;\r\n  uiOptions?: UIOptions;\r\n}\r\n\r\ninterface UIOptions {\r\n  autoUpdateUrl?: boolean;\r\n  localStorageBackup?: boolean;\r\n}\r\n\r\ninterface WindowOptions {\r\n  console?: boolean\r\n}\r\n\r\ninterface HashValue {\r\n  editor?: string;\r\n  options?: Options;\r\n}\r\n\r\nlet tsEditor: monaco.editor.IStandaloneCodeEditor;\r\nlet jsEditor: monaco.editor.IStandaloneCodeEditor;\r\nlet htmlEditor: monaco.editor.IStandaloneCodeEditor;\r\nlet lessEditor: monaco.editor.IStandaloneCodeEditor;\r\nlet runWindow: Window;\r\n\r\n// TODO CHECKX - remove?\r\n// // const runWindowCodeConsole = prepareWindowCode(runWindowHtmlConsole);\r\n// // const runWindowCodePlain = prepareWindowCode(runWindowHtmlPlain);\r\nconst runWindowCodeIFrame = prepareWindowCode(runWindowHtmlIFrame);\r\n\r\nconst _tsVersion = document.getElementById('ts-version');\r\nconst _editorJs = document.getElementById('editor-js');\r\nconst _editorTs = document.getElementById('editor-ts');\r\nconst _editorHtml = document.getElementById('editor-html');\r\nconst _editorLess = document.getElementById('editor-less');\r\nconst _runCode = document.getElementById('run-code');\r\nconst _runText = document.getElementById('run-text')\r\nconst _loading = document.getElementById('loading');\r\nconst _processing = document.getElementById('processing');\r\nconst _shareableUrl = document.getElementById('shareable-url');\r\nconst _optionsToggle = document.getElementById('options-toggle');\r\nconst _options = document.getElementById('options');\r\nconst _optionsList = (Array.prototype.slice.call(_options.getElementsByClassName('option'))).map((v: Element) => {\r\n  return v.firstElementChild as HTMLInputElement | HTMLSelectElement;\r\n});\r\n\r\nlet defaultOptions: Options;\r\nlet excludeOptionsFromSharing = ['uiOptions'];\r\n\r\nwindow.tsp = {\r\n  options: {}\r\n};\r\n\r\nfunction setDefaultOptions(): void {\r\n  defaultOptions = {\r\n    compilerOptions: {\r\n      noImplicitAny: false,\r\n      strictNullChecks: false,\r\n      strictFunctionTypes: false,\r\n      strictPropertyInitialization: false,\r\n      noImplicitReturns: false,\r\n      noImplicitThis: false,\r\n      removeComments: false,\r\n      experimentalDecorators: false,\r\n      emitDecoratorMetadata: false,\r\n      allowNonTsExtensions: true,\r\n      target: monaco.languages.typescript.ScriptTarget.ES5\r\n    },\r\n    windowOptions: {\r\n      console: true\r\n    },\r\n    uiOptions: {\r\n      autoUpdateUrl: false,\r\n      localStorageBackup: true\r\n    }\r\n  };\r\n}\r\n\r\nfunction bootstrap(): void {\r\n  (document.getElementById('base') as HTMLBaseElement).href = getBaseHref();\r\n\r\n  const win = window as any;\r\n  win.require.config({ paths: { vs: '/* @echo MONACO_LOCATION */' } });\r\n\r\n  win.MonacoEnvironment = {\r\n    getWorkerUrl: (workerId, label) => {\r\n      return 'proxy.js';\r\n    }\r\n  };\r\n\r\n  win.require(['/* @echo MONACO_ENTRY */'], init);\r\n}\r\n\r\nfunction init(editor: any): void {\r\n  _tsVersion.innerText = '/* @echo TYPESCRIPT_VERSION */';\r\n  // const hashValue = getHash(); // TODO CHECKX uncomment?\r\n  const backup = getLocalStorage();\r\n  let useBackup = false;\r\n\r\n  setDefaultOptions();\r\n  expose();\r\n\r\n  // TODO CHECKX: pull in .ts code from a file\r\n  let tsDefaultValue = [\r\n    \"interface Person {\",\r\n    \"    firstName: string;\",\r\n    \"    lastName:  string;\",\r\n    \"}\",\r\n    \"\",\r\n    \"function greeter(person: Person) {\",\r\n    \"    return \\\"Hello, \\\" + person.firstName + \\\" \\\" + person.lastName;\",\r\n    \"}\",\r\n    \"\",\r\n    \"let user = {\",\r\n    \"    firstName: \\\"Malcolm\\\",\",\r\n    \"    lastName:  \\\"Reynolds\\\"\",\r\n    \"};\",\r\n    \"\",\r\n    \"document.querySelector(\\\"#app\\\").innerHTML = greeter(user);\",\r\n    ''\r\n  ].join('\\n');\r\n\r\n  // TODO CHECKX: pull in .html code from a file\r\n  let htmlDefaultValue = [\r\n    '<div id=\"app\"></div>',\r\n    ''\r\n  ].join('\\n');\r\n\r\n  // TODO CHECKX: pull in .less code from a file\r\n  let lessDefaultValue = [\r\n    'body {',\r\n    '    background: #20262E;',\r\n    '    font-family: Helvetica;',\r\n    '    padding: 20px;',\r\n    '}',\r\n    '#app {',\r\n    '    background: #ff00ff;',\r\n    '    border-radius: 4px;',\r\n    '    padding: 20px;',\r\n    '    text-align: center;',\r\n    '    transition: all 0.2s;',\r\n    '}',\r\n    ''\r\n  ].join('\\n');\r\n\r\n  if (!backup || !backup.options || !backup.options.uiOptions) {\r\n    useBackup = true;\r\n  } else if (backup.options.uiOptions.localStorageBackup) {\r\n    useBackup = true;\r\n  }\r\n\r\n  setOptions({ uiOptions: { localStorageBackup: useBackup } });\r\n\r\n  if (useBackup && backup && backup.options) {\r\n    for (let opt in excludeOptionsFromSharing) {\r\n      if (backup.options.hasOwnProperty(opt)) {\r\n        const o = {};\r\n        o[opt] = backup.options[opt];\r\n        setOptions(o);\r\n      }\r\n    }\r\n  }\r\n\r\n  // TODO CHECKX uncomment?\r\n  // // if (hashValue && !!hashValue.editor) {\r\n  // //   tsDefaultValue = hashValue.editor;\r\n  // // } else if (useBackup && backup && !!backup.editor) {\r\n  // //   tsDefaultValue = backup.editor;\r\n  // // }\r\n\r\n  // TODO CHECKX uncomment?\r\n  // // if (hashValue && hashValue.options) {\r\n  // //   setOptions(hashValue.options);\r\n  // // } else if (useBackup && backup && backup.options) {\r\n  // //   setOptions(backup.options);\r\n  // // }\r\n\r\n  updateCompilerOptions();\r\n\r\n  tsEditor = monaco.editor.create(_editorTs, {\r\n    value: tsDefaultValue,\r\n    language: 'typescript',\r\n    theme: 'vs-light',\r\n    automaticLayout: true,\r\n    minimap: {\r\n      enabled: false\r\n    },\r\n    selectionClipboard: false\r\n  });\r\n\r\n  jsEditor = monaco.editor.create(_editorJs, {\r\n    value: [\r\n      '',\r\n      ''\r\n    ].join('\\n'),\r\n    language: 'javascript',\r\n    theme: 'hc-black',\r\n    readOnly: true,\r\n    automaticLayout: true,\r\n    minimap: {\r\n      enabled: false\r\n    },\r\n    // contextmenu: false,\r\n    quickSuggestions: false,\r\n    parameterHints: false,\r\n    autoClosingBrackets: false,\r\n    suggestOnTriggerCharacters: false,\r\n    snippetSuggestions: 'none',\r\n    wordBasedSuggestions: false,\r\n    // selectionClipboard: false,\r\n    // find: {\r\n    //   seedSearchStringFromSelection: false,\r\n    //   autoFindInSelection: false\r\n    // }\r\n  });\r\n\r\n  htmlEditor = monaco.editor.create(_editorHtml, {\r\n    value: htmlDefaultValue,\r\n    language: 'html',\r\n    theme: 'vs-light',\r\n    automaticLayout: true,\r\n    minimap: {\r\n      enabled: false\r\n    },\r\n    selectionClipboard: false\r\n  });\r\n\r\n  lessEditor = monaco.editor.create(_editorLess, {\r\n    value: lessDefaultValue,\r\n    language: 'less',\r\n    theme: 'vs-light',\r\n    automaticLayout: true,\r\n    minimap: {\r\n      enabled: false\r\n    },\r\n    selectionClipboard: false\r\n  });\r\n\r\n  ready();\r\n}\r\n\r\nfunction ready(): void {\r\n  tsEditor.onDidChangeModelContent(debounce(onCodeChange, 100));\r\n  _optionsToggle.onclick = toggleOptions;\r\n  _runCode.onclick = runCode;\r\n  initOptions();\r\n  window.onkeydown = keyBindings;\r\n  onCodeChange();\r\n  updateHash(true);\r\n  updateLocalStorage(true)\r\n  fadeOut(_loading);\r\n}\r\n\r\nfunction expose() {\r\n  window.tsp.options = defaultOptions;\r\n  window.tsp.compile = onCodeChange;\r\n  window.tsp.emit = onCodeChange;\r\n  window.tsp.run = runCode;\r\n  window.tsp.share = getShareableUrl;\r\n  window.tsp.reset = resetLocalStorage;\r\n  window.tsp.sync = syncOptions;\r\n  window.tsp.setCompilerOption = setCompilerOption;\r\n}\r\n\r\nfunction setCompilerOption(name: string, value: any): void {\r\n  window.tsp.options.compilerOptions[name] = value;\r\n  initOptions();\r\n  updateCompilerOptions();\r\n  onCodeChange();\r\n}\r\n\r\nfunction syncOptions(): void {\r\n  initOptions();\r\n  updateCompilerOptions();\r\n}\r\n\r\nfunction keyBindings(this: Window, ev: KeyboardEvent) {\r\n  if (ev.ctrlKey && ev.which === 82 /* r */) {\r\n    runCode();\r\n  }\r\n\r\n  if ((ev.ctrlKey || ev.metaKey) && ev.which === 83 /* s */) {\r\n    ev.preventDefault();\r\n  }\r\n}\r\n\r\nfunction initOptions() {\r\n  const inputs = _optionsList;\r\n\r\n  for (let i = 0; i < inputs.length; i++) {\r\n    let input = inputs[i];\r\n    let option = input.classList.item(0);\r\n\r\n    if (options()[option].hasOwnProperty(input.name)) {\r\n      if (input instanceof HTMLInputElement) {\r\n        if ((input as HTMLInputElement).type === 'checkbox') {\r\n          (input as HTMLInputElement).checked = !!defaultOptions[option][input.name];\r\n        } else if ((inputs[i] as HTMLInputElement).type === 'text') {\r\n          (input as HTMLInputElement).value = `${defaultOptions[option][input.name]}`;\r\n        }\r\n      } else if (input instanceof HTMLSelectElement) {\r\n        (input as HTMLSelectElement).value = `${defaultOptions[option][input.name]}`;\r\n      }\r\n    }\r\n\r\n    input.onchange = onOptionChange;\r\n  }\r\n}\r\n\r\nfunction onOptionChange(this: HTMLInputElement | HTMLSelectElement, ev: Event): any {\r\n  let option = this.classList.item(0);\r\n\r\n  let value = options()[option][this.name];\r\n\r\n  if (this instanceof HTMLInputElement) {\r\n    if ((this as HTMLInputElement).type === 'checkbox') {\r\n      value = !!(this as HTMLInputElement).checked;\r\n    } else if ((this as HTMLInputElement).type === 'text') {\r\n      value = (this as HTMLInputElement).value;\r\n    }\r\n  } else if (this instanceof HTMLSelectElement) {\r\n    value = (this as HTMLSelectElement).value;\r\n  } else {\r\n    value = (this as any).value || void 0;\r\n  }\r\n\r\n  options()[option][this.name] = value;\r\n\r\n  updateCompilerOptions();\r\n  onCodeChange();\r\n  updateHash();\r\n  updateLocalStorage();\r\n  updateShareableUrl();\r\n}\r\n\r\nfunction onCodeChange(event?: monaco.editor.IModelContentChangedEvent): void {\r\n  if (event !== void 0) {\r\n    updateHash();\r\n    updateLocalStorage();\r\n  }\r\n\r\n  showProcessingIndicator();\r\n\r\n  getService()\r\n    .then(service => {\r\n      return service.getEmitOutput(tsEditor.getModel().uri.toString())\r\n    }, hideProcessingIndicator)\r\n    .then((result: ts.EmitOutput) => {\r\n      if (result.emitSkipped) {\r\n        return false;\r\n      }\r\n\r\n      if (!result.outputFiles || !result.outputFiles[0]) {\r\n        return false;\r\n      }\r\n\r\n      return result.outputFiles[0].text;\r\n    }, hideProcessingIndicator)\r\n    .then(text => {\r\n      if (typeof text === 'string') {\r\n        updateJsEditor(text);\r\n      }\r\n\r\n      return !!text;\r\n    }, hideProcessingIndicator)\r\n    .then(updated => {\r\n      hideProcessingIndicator();\r\n    }, hideProcessingIndicator)\r\n}\r\n\r\nfunction runCode(): void {\r\n  let win: Window;\r\n\r\n  if (!runWindow || runWindow.closed) {\r\n    windowOpened();\r\n    win = window.open('run-iframe.html', '', 'width=800,height=600');\r\n    runWindow = win;\r\n  } else {\r\n    win = runWindow;\r\n    windowRefreshed();\r\n  }\r\n\r\n  win.onunload = null;\r\n  win.location.href = 'run-iframe.html'\r\n\r\n  updateRunFile();\r\n\r\n  // TODO CHECKX - instead of launching a blank new window, launch the url of the run-iframe and write the code to that!\r\n  setTimeout(() => {\r\n    win.document.open()\r\n    // win.document.write(htmlEditor.getValue());\r\n    win.document.write(getWindowCode());\r\n    win.document.close();\r\n    win.onunload = windowUnloaded;\r\n  }, 50);\r\n}\r\n\r\nfunction updateRunFile() {\r\n  var data = fs.readFileSync('run-console.html', 'utf-8');\r\n  // fs.readFile('run-console.html', {encoding: 'utf-8'}, function(err, contents) {\r\n  //   console.log(contents);\r\n  // });\r\n  // var newValue = data.replace(/__CODE__/, htmlEditor.getValue());\r\n  // fs.writeFileSync('run-console.html', newValue, 'utf-8');\r\n}\r\n\r\nfunction windowOpened() {\r\n  _runText.innerText = 'Run in window';\r\n}\r\n\r\nfunction windowRefreshed() {\r\n  _runText.innerText = 'Run in window';\r\n}\r\n\r\nfunction windowUnloaded() {\r\n  _runText.innerText = 'Run in new window';\r\n}\r\n\r\nfunction updateHash(initial?: boolean): void {\r\n  if (!!window.tsp.options.uiOptions.autoUpdateUrl) {\r\n    if (!initial) {\r\n      window.location.hash = encode(exclude(getHashValue()));\r\n    }\r\n  } else if(!!window.location.hash) {\r\n    window.location.hash = '';\r\n  }\r\n}\r\n\r\nfunction getLocalStorage(): HashValue {\r\n  const hash = localStorage.getItem('tsp');\r\n  if (!hash) return {};\r\n  return decode(hash);\r\n}\r\n\r\nfunction updateLocalStorage(initial?: boolean): void {\r\n  if (!!window.tsp.options.uiOptions.localStorageBackup) {\r\n    localStorage.setItem('tsp', encode(getHashValue()));\r\n  } else {\r\n    localStorage.setItem('tsp', encode({ options: { uiOptions: { localStorageBackup: false } } }));\r\n  }\r\n}\r\n\r\nfunction resetLocalStorage(reload = false, event: Event) {\r\n  if (event) event.preventDefault();\r\n  const confirmation = confirm('Are you sure? All your changes will be lost.');\r\n  if (!confirmation) return;\r\n  localStorage.removeItem('tsp');\r\n  if (reload) window.location.href = window.location.href.split('#')[0];\r\n}\r\n\r\nfunction updateShareableUrl(): void {\r\n  (_shareableUrl as HTMLInputElement).value = getShareableUrl();\r\n}\r\n\r\nfunction getShareableUrl(): string {\r\n  return window.location.href\r\n    .replace(window.location.hash, '')\r\n    .replace('#', '') +\r\n    `#${encode(exclude(getHashValue()))}`;\r\n}\r\n\r\nfunction encode(value): string {\r\n  return btoa(encodeURIComponent(JSON.stringify(value)));\r\n}\r\n\r\nfunction decode(hash: string): HashValue {\r\n  return JSON.parse(decodeURIComponent(atob(hash)));\r\n}\r\n\r\nfunction exclude(value: HashValue): HashValue {\r\n  value = JSON.parse(JSON.stringify(value));\r\n\r\n  for (let opt of excludeOptionsFromSharing) {\r\n    value.options[opt] = void 0;\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nfunction getHashValue(exclude = true): HashValue {\r\n  const value = {\r\n    editor: tsEditor.getValue(),\r\n    options: getOptions()\r\n  };\r\n\r\n  return value;\r\n}\r\n\r\nfunction getHash(): HashValue {\r\n  const hash = window.location.hash.substr(1);\r\n  if (!hash) return {};\r\n  return decode(hash);\r\n}\r\n\r\nfunction updateJsEditor(text: string): void {\r\n  jsEditor.getModel().setValue(text);\r\n}\r\n\r\nfunction updateCompilerOptions(): void {\r\n  const options = getOptions();\r\n  options.compilerOptions.allowNonTsExtensions = true;\r\n  monaco.languages.typescript.typescriptDefaults.setCompilerOptions(options.compilerOptions);\r\n}\r\n\r\nfunction prepareWindowCode(html: string): string {\r\n  return html\r\n    .replace(new RegExp(/__BASE__/), window.location.href.split('#')[0].replace(/\\/?$/, '/'))\r\n    .replace(new RegExp(/__VERSION__/g), '/* @echo VERSION */');\r\n}\r\n\r\nfunction getWindowCode(html?: string): string {\r\n  // TODO CHECKX - only using window with console\r\n  // // html = html !== void 0 ? html : (options().windowOptions.console ? runWindowCodeConsole : runWindowCodePlain);\r\n  html = html !== void 0 ? html : runWindowCodeIFrame;\r\n  html = html.replace(/__CODE__/, jsEditor.getValue());\r\n  console.log(\"getWindowCode\\n\");\r\n  console.log(html);\r\n  return html;\r\n}\r\n\r\nfunction setOptions(opts: { [index: string]: any }, base = options()) {\r\n  for (let k in opts) {\r\n    if (opts[k] !== null && typeof opts[k] === 'object') {\r\n      setOptions(opts[k], base[k]);\r\n    } else {\r\n      base[k] = opts[k];\r\n    }\r\n  }\r\n}\r\n\r\nfunction options(): Options {\r\n  return window.tsp.options;\r\n}\r\n\r\nfunction getOptions(): Options {\r\n  return JSON.parse(JSON.stringify(options()));\r\n}\r\n\r\nfunction getBaseHref(): string {\r\n  return window.location.href.split('#')[0].replace(/\\/?$/, '/');\r\n}\r\n\r\nfunction getService(): monaco.Promise<any> {\r\n  return monaco.languages.typescript.getTypeScriptWorker()\r\n    .then(worker => worker(tsEditor.getModel().uri))\r\n}\r\n\r\nfunction toggleOptions(this: HTMLElement, ev: Event): void {\r\n  const show = this.classList.toggle('active');\r\n\r\n  if (show) {\r\n    updateShareableUrl();\r\n  }\r\n\r\n  _options.classList.toggle('visible');\r\n}\r\n\r\nfunction showProcessingIndicator(): void {\r\n  _processing.style.display = 'inline-block';\r\n}\r\n\r\nfunction hideProcessingIndicator(): void {\r\n  _processing.style.display = 'none';\r\n}\r\n\r\nfunction fadeOut(target: HTMLElement, interval = 5, reduce = 0.01): void {\r\n  target.style.opacity = '1';\r\n\r\n  const fadeEffect = setInterval(() => {\r\n    if (parseFloat(target.style.opacity) < 0.05) {\r\n      clearInterval(fadeEffect);\r\n      target.style.opacity = '0';\r\n      target.style.display = 'none';\r\n    } else {\r\n      target.style.opacity = `${parseFloat(target.style.opacity) - reduce}`;\r\n    }\r\n  }, interval);\r\n}\r\n\r\nbootstrap();\r\n"],"sourceRoot":""}